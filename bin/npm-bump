#!/usr/bin/env node

'use strict';

/* eslint-disable no-process-exit */

const minimist = require('minimist');
const npmBump = require('../lib/cli');

const opts = minimist(process.argv.slice(2), {
    alias: {
        // Configuration
        r: 'remote',
        b: 'branch',
        p: 'prefix',
        t: 'type',
        s: 'source',

        // Miscellaneous
        h: 'help',
        v: 'version',
    },
    default: {
        remote: 'origin',
        branch: 'master',
        directory: './',
    },
});

if (opts.help) {
    console.log(`
USAGE:
    npm-bump release-type [options]

where release-type can be major, minor, patch or a custom name 

Configuration:
    -r, --remote    The remote name to push to, origin by default
    -b, --branch    The branch name to push, master by default
    -p, --prefix     The branch name to push, master by default
    -t, --type      An alternative way to pass the release type (as described above) 
    -s, --source    Directory to publish

Miscellaneous:
    -h, --help      Display this help
    -v, --version   Display version info
`);
    process.exit(0);
}

if (opts.version) {
    console.log(`npm-bump ${ require('../package.json').version }`);
    process.exit(0);
}

try {
    npmBump.custom({
        remote: opts.remote || opts._[1],
        branch: opts.branch || opts._[2],
        prefix: opts.prefix,
        source: opts.source,
    })(opts.type || opts._[0]);
} catch (error) {
    if (error.name === 'UsageError') {
        console.error(error.message);
    } else {
        throw error;
    }
}
